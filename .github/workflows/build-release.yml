name: Build Release
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    tags:
      - 'v*.*.*'
permissions:
  contents: write
  discussions: write
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GIT_COMMITTER_NAME: jesshaw
  GIT_COMMITTER_EMAIL: jesshaw@126.com
jobs:
  Build-Release-Image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Update pom.xml version
        run: |
          version=$(sed -n 's/<version>\(.*\)-SNAPSHOT<\/version>/\1/p' pom.xml | sed 's/ //g')
          sed -i "s/<version>${version}-SNAPSHOT<\/version>/<version>${version}<\/version>/" pom.xml
          echo "VERSION=${version}" >> $GITHUB_ENV
      - name: Commit changes
        run: |
          git config --global user.email ${{ env.GIT_COMMITTER_EMAIL }}
          git config --global user.name ${{ env.GIT_COMMITTER_NAME }}
          git status
          git commit -am "Release ${{ github.ref_name }}"
          git log -2
          git push
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
          cache-dependency-path: 'pom.xml' # optional
      - name: Maven build
        run: chmod +x mvnw && ./mvnw --batch-mode -Pdev,webapp clean package --file pom.xml
      # Publishing packages to GitHub Packages
      # - name: Publish package
      #   run: mvn --batch-mode deploy
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Read Version From gradle.properties
      #   id: read-version
      #   shell: bash
      #   run: |
      #     version=$(sed -n 's/version=\(.*\)/\1/p' gradle.properties)
      #     echo "Version is $version"
      #     echo "version=$version" >> $GITHUB_OUTPUT
      - name: Release content
        run: |
          echo ${{ github.sha }} > Release.txt
          mv ./target/*.jar LxmCRM-${{ env.VERSION }}.jar
      - name: Show content
        run: cat Release.txt
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            Release.txt
            LxmCRM-${{ env.VERSION }}.jar

      # - name: Log in to the Container registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
