package com.lexiangmiao.crm.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ResourceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResourceAllPropertiesEquals(Resource expected, Resource actual) {
        assertResourceAutoGeneratedPropertiesEquals(expected, actual);
        assertResourceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResourceAllUpdatablePropertiesEquals(Resource expected, Resource actual) {
        assertResourceUpdatableFieldsEquals(expected, actual);
        assertResourceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResourceAutoGeneratedPropertiesEquals(Resource expected, Resource actual) {
        assertThat(expected)
            .as("Verify Resource auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResourceUpdatableFieldsEquals(Resource expected, Resource actual) {
        assertThat(expected)
            .as("Verify Resource relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getPermission()).as("check permission").isEqualTo(actual.getPermission()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResourceUpdatableRelationshipsEquals(Resource expected, Resource actual) {
        assertThat(expected)
            .as("Verify Resource relationships")
            .satisfies(e -> assertThat(e.getAuthority()).as("check authority").isEqualTo(actual.getAuthority()));
    }
}
